// Allows the console to be activated.
con_enable "1";

// Set special developer debug console messages level.
// Default: 0
//
// <> Values:
// 0: Disabled
// 1: Show only important debug messages.
// 2: Show a significant part of debug messages.
// 4: Show all debug messages.
//
// <!> Can cause performance issues.
// <i> Floods the console with more errors/debugs (than the disabled state).
developer "0"

// Filters or highlights console output defined with 'con_filter_text'.
// Default: 0
//
// <> Values:
// 1: Filters everything.
// 2: Displays filtered text brighter than other text.
//
// <!> Command 'developer 1' is required to work.
con_filter_enable "0"

// Text with which to filter (or highlight) console log.
// Default ""
//
// <!> Set 'con_filter_enable' to '<0' to activate.
con_filter_text "Damage"

// Text to filter out of console log.
// Default: ""
//
// <!> Set 'con_filter_enable' to '<0' to activate.
con_filter_text_out "Player:"

// Server IPs will be hidden in the console (except the "status" command).
cl_hideserverip "0"

// Disables the HTML motds.
cl_disablehtmlmotd "0"

// Disable community server message.
player_nevershow_communityservermessage "1"

// Scales HUD elements.
hud_scaling "0.8";

// Set the alpha of the background on HUD elements.
cl_hud_background_alpha "0.6"

// Set the color of HUD elements.
// Default: 0
//
// <> Values:
// 0: Default
// 1: White
// 2: Light Blue
// 3: Blue
// 4: Purple
// 5: Red
// 6: Orange
// 7: Yellow
// 8: Green
// 9: Aqua
// 10: Pink
//
// >> The color applies to selected parts of the HUD, including health, armor and ammo.
cl_hud_color "2";

// Preferred teammate color.
// Default: 0
//
// <> Values:
// 0: Yellow
// 1: Purple
// 2: Green
// 3: Blue
// 4: Orange
//
// <i> The color is shown on the radar and on the Steam avatar, in the lobby.
cl_color "3";

// Simplify the HUD elements.
cl_hud_healthammo_style "1";

// Hide names and avatars of muted players.
cl_sanitize_muted_players "0"

// Replace names of other players with something non-offensive.
cl_sanitize_player_names "0"

// Hide avatar images for other players.
cl_hide_avatar_images "0"

// Determines how to display players at the HUD.
cl_hud_playercount_showcount "1";

// Displays the player count HUD element on the bottom of the screen.
cl_hud_playercount_pos "0";

// Set the scale of the radar HUD element.
cl_hud_radar_scale "1.3";

// Set the scale of the radar interior display.
cl_radar_scale "0.4";

// Set the minimum icon scale.
cl_radar_icon_scale_min "0.4";

// Center the radar around the player.
cl_radar_always_centered "0";

// Rotate the radar in the direction the player is facing.
cl_radar_rotate "0";

// Set map display mod of the Danger Zone tablet.
// Default: 1
//
// >> Toggles between a tablet map that rotates and a tablet map with a fixed orientation.
//
// <> Values:
// 1: Rotate based on where the character is facing.
// 2: Always face north.
// 3: The map is centered and rotates.
cl_tablet_mapmode "1"

// The radar will toggle to a square when the scoreboard is visible.
// Default: 1
//
// >> Toggles the radar to a square and display the whole map when the scoreboard is visible.
cl_radar_square_with_scoreboard "0"

// Set C4 HUD image underneath the bomb.
cl_hud_bomb_under_radar "1";

// Set the Danger Zone compass to appear at the top of the screen.
cl_compass_enabled "1"

// Force draw deathnotices.
cl_drawhud_force_deathnotices "0"

// Force draw radar.
cl_drawhud_force_radar "0"

// Force draw teamid overhead.
cl_drawhud_force_teamid_overhead "0"

// For drawing only the crosshair and death notices (used for moviemaking).
cl_draw_only_deathnotices "0"

// The clan name will show next to player names in the death notices.
cl_show_clan_in_death_notice "0"

// Vote screens when observing.
cl_drawhud_specvote "1"

// Show the crosshair of the player being observed.
// Default: 1
//
// <> Values:
// 0: Disabled
// 1: Friends and party.
// 2: Everyone
cl_show_observer_crosshair "2"

// Control the crosshair shown when observing a bot.
// Default: 0
//
// <> Values:
// 0: Show player crosshair
// 1: Show player crosshair only when bot can be taken over, otherwise show default.
// 2: Always show default crosshair for bots.
cl_observed_bot_crosshair "1"

// Always show team id over teammates.
// Default: 2
//
// <> Values:
// 0: Disabled
// 1: Pips (through walls and smokes).
// 2: Pips, name, and equipment (permanent).
//
// <i> The value '2' is the same as the '+cl_show_team_equipment' alias.
cl_teamid_overhead_mode "2"

// Set players on the team to have different colors on the radar and scoreboard.
// Default: 1
//
// <> Values:
// 0: Show teammates as same colors.
// 1: Show teammates as different colors.
// 2: Show teamamtes as different colors and put a letter of the color (for color blind peoples).
cl_teammate_colors_show "1"

// Alters the incorrect live/dead player record keeping.
// Default: 0
cl_scoreboard_survivors_always_on "0"

// Displays in game lessons that teach new players.
gameinstructor_enable "0"

// Auto-help.
cl_autohelp "0"

// On-screen help.
cl_showhelp "0"

// Display the current loadout.
cl_showloadout "1"

// Draw fps meter.
cl_showfps "0"

// Set CPU frequency monitoring interval in seconds.
cpu_frequency_monitoring "0"

// Force the buy menu to close after a single time purchase.
closeonbuy "0";

// Automatically apply graffiti when graffiti menu closes.
cl_playerspray_auto_apply "1"

// Auto-save a scoreboard screenshot at the end of a map.
hud_takesshots "0"

// Save screenshots to Steam.
cl_steamscreenshots "0"

// Use right-handed view models.
cl_righthand "0";

// Viewmodel position.
// Default: 1
//
// <> Values:
// 1: Desktop = viewmodel_fov '60'; viewmodel_offset_x '1';   viewmodel_offset_y '1'; viewmodel_offset_z '-1'
// 2: Couch   = viewmodel_fov '54'; viewmodel_offset_x '0';   viewmodel_offset_y '0'; viewmodel_offset_z '0'
// 3: Classic = viewmodel_fov '68'; viewmodel_offset_x '2.5'; viewmodel_offset_y '0'; viewmodel_offset_z '-1.5'
//
// <i> Mixing the four commands from below ('viewmodel_offset') with presetpos is possible. Disable all of them to only use the preset position.
// <!> Value '0' will display an error because it cannot recognize any preset but in reality it will use them (recognize custom values).
viewmodel_presetpos "3"

// Set how much of the viewmodel is visible overall.
viewmodel_fov "68";

// Determines the X axis of the viewmodel.
// Default: 0
//
// <i> Position: left <-> right
// <i> Higher values = further away from the screen center.
viewmodel_offset_x "2.5";

// Determines the Y axis of the viewmodel.
// Default: 0
//
// <i> Position: forward <-> back
// <i> Higher values = further away from the player.
viewmodel_offset_y "2";

// Determines the Z axis of the viewmodel.
// Default: 0
//
// <i> Position: up <-> down
// <i> Higher values = higher weapon holding position.
viewmodel_offset_z "-2";

// Amount of weapon recoil/aimpunch to display on viewmodel.
viewmodel_recoil "0"

// The amount the viewmodel lowers when running.
// Default: 21
cl_bob_lower_amt "5";

// The amount the viewmodel moves side to side when running.
// Default: 0.4
//
// <i> Also affects the scope.
cl_bobamt_lat "0.1";

// The amount the viewmodel moves up and down when running.
// Default: 0.25
//
// <i> Also affects the scope.
cl_bobamt_vert "0.1";

// The frequency at which the viewmodel bobs.
cl_bobcycle "0.98";

// The amount the viewmodel shifts to the left when shooting accuracy increases.
cl_viewmodel_shift_left_amt "0.5";

// The amount the viewmodel shifts to the right when shooting accuracy decreases.
cl_viewmodel_shift_right_amt "0.25";

// Player will automatically receive a random weapon on spawn in deathmatch (otherwise, they will receive the last weapon).
cl_dm_buyrandomweapons "0"

// Automatically switch to spectate mode after clicking the 'Play Again' button in end of match screen.
cl_dz_playagain_auto_spectate "0"

// Show stats screen in spectator view.
cl_spec_stats "1"

// Toggle the visibility of scoreboard players.
spec_hide_players "0"

// Toggle the visibility of the spectator bindings.
cl_spec_show_bindings "1"

// Map voting and spectator view use the raw number keys instead of the weapon binds (ex. slot1, slot2, etc).
spec_usenumberkeys_nobinds "1"

// Interpolation between observer targets.
cl_obs_interp_enable "1"

// Freezecam on the client, after death.
// Default: 0
cl_disablefreezecam "1"

// Dynamic Y movement of the freezecam kill panel.
cl_freezecampanel_position_dynamic "1"

// Do not receive chat messages from other Gotv spectators.
tv_nochat "0"

// Auto-start Killer Replay when available.
// Default: 1
//
// >> When available, Killer Replay will start automatically after death.
spec_replay_autostart "0"

// Spectator Gotv Replay when killed by a bot.
spec_replay_bot "0"

// Gotv Replay delay in seconds.
spec_replay_cam_delay "5"

// Debug options for replay cam.
spec_replay_cam_options "0"

// The trailing time, in seconds, of replay past the event, including fade-out.
spec_replay_winddown_time "2"

// Danger Zone spectating groups.
// Default: 1
//
// <> Values:
// 0: Spectating numbers will be the default, as individual players.
// 1: Group players into their teams for spectating.
spec_dz_group_teams "1"

// Show player outlines and name IDs through walls.
// Default: 0
spec_show_xray "1"

// Show X-ray dropped defuse kits.
// Default: 0
spec_xray_dropped_defusekits "1"

// Always show X-ray dropped c4 and defuse kits.
// Default: 0
spec_xray_dropped_unoccluded "1"

// Lurking player xray glow scaling.
spec_glow_silent_factor "0.6"

// Time for the noisy player glow 'spike' to show that they made noise very recently.
spec_glow_spike_time "0"

// Time for the noisy players to stay at full brightness.
spec_glow_full_time "1"

// Time to decay glow from '1.0' to 'spec_glow_silent_factor' after 'spec_glow_full_time'.
spec_glow_decay_time "2"

// Steam overlay notification position.
// Default: topleft
//
// <> Values:
// topleft:     Display notifications at the top left corner (disadvantage: overlap the radar).
// topright:    Display notifications at the top right corner (disadvantage: overlap the kill feed).
// bottomleft:  Display notifications at the bottom left corner (disadvantage: overlap the hp and armor bar).
// bottomright: Display notifications at the top right corner (disadvantage: overlap the ammo bar).
ui_steam_overlay_notification_position "topright"

// << DISABLED >>
// Current clan ID for name decoration.
// Default: ""
// cl_clanid ""

// << SCRIPT >>
// Draws the network usage data.
// Default: 0
//
// <> Values:
// 0: Disabled
// 1: Show network data.
// 2: Show in/out data.
// 3: Draw data on payload.
//
// <i> Hiding the net graph will result in a more precise data (for the first few seconds) than toggling it, but it will lower the frame rates.
// <!> The graph will appear via a script (check script.cfg). Remove the script and then set to value '>=1' for a permanent graph.
net_graph "0"

// Draw text fields.
// Default: 1
//
// <i> Enabling the graph text (which still work in the background) with a script will cause some frame decrease than fully disabling it.
net_graphtext "1"

// Position of the net graph.
// Default: 1
//
// <> Values:
// 0: left
// 1: right
// 2: middle
// <i> Any other value will set the left edge x coordinate of the graph (resolution dependent).
net_graphpos "2";

// Height of the netgraph panel.
net_graphheight "64"

// Determines whether netgraph font is proportional.
// Default: 1
//
// <> Values:
// 0: Small font.
// 1: Normal font.
net_graphproportionalfont "0"

// Draw the interpolation graph.
// Default: 1
net_graphshowinterp "1"

// Draw the ping/packet loss graph.
// Default: 1
net_graphshowlatency "1"

// Draw the server frame rate graph.
// Default: 0
net_graphshowsvframerate "0"

// Show IPCs on netgraph panel.
// Default: 0
net_graphipc "0"

// Set the net graph solid.
// Default: 1
//
// <!> Only usable with 'net_graph 3'.
net_graphsolid "1"

// Set the net graph scale.
// Default: 5
net_scale "5"

// The latency graph represents this many milliseconds.
// Default: 400
net_graphmsecs "400"

// The percentage of the screen height that is considered safe from overscan.
// Default: 1
//
// <-> Defines the safe zone of the HUD (vertical).
safezoney "1"

// The percentage of the screen width that is considered safe from overscan.
// Default: 1
//
// <-> Defines the safe zone of the HUD (horizontal).
safezonex "1";
